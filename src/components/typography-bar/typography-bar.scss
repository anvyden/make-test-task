@import '~/scss/variables';

.typography-bar {
  &__bar {
    display: grid;
    grid-template-columns: repeat(calc(($desktopColumns / 4) * 3), 1fr);
    column-gap: $gutter;
    padding-bottom: 15px;
    border-bottom: 1px solid $inActiveColor;

    @media screen and (max-width: $tabletWidth) {
      grid-template-columns: repeat(calc(($tabletColumns / 4) * 3), 1fr);
    }

    @media screen and (max-width: $mobileWidth) {
      grid-template-columns: repeat($mobileColumns, 1fr);
      column-gap: $mobileGutter;
    }
  }

  &__button {
    position: relative;
    grid-column: 1fr;
    justify-self: start;
    background: none;
    border: none;
    color: $secondaryColor;
    cursor: pointer;
    outline: none;
    
    &::after {
      position: absolute;
      left: 0;
      bottom: -16px;
      width: 0;
      height: 2px;
      background-color: $activeColor;
      content: '';
      transition: width 0.5s;
    }

    &:hover,
    &:focus-visible,
    &--active {
      color: $primaryColor;

      &::after {
        width: 100%;
      }
    }
  }

  &__content {
    grid-column: 1 / calc((($desktopColumns / 4) * 3) + 1);
    margin-top: calc($gutter * 2);

    @media screen and (max-width: $mobileWidth) {
      margin-top: calc($mobileGutter * 2);
    }

    &-list {
      display: grid;
      row-gap: calc($gutter * 1.5);
      list-style-type: none;
      opacity: 1;
      transition: opacity 0.25s;

      &--hidden {
        opacity: 0;
      }

      @media screen and (max-width: $tabletWidth) {
        grid-column: 1 / calc((($tabletColumns / 4) * 3) + 1);
      }

      @media screen and (max-width: $mobileWidth) {
        grid-column: 1 / calc($mobileColumns + 1);
        row-gap: calc($mobileGutter * 1.5);
      }
    }

    &-item {
      display: grid;
      grid-template-columns: 1fr 2fr;
      column-gap: $gutter;

      @media screen and (max-width: $mobileWidth) {
        grid-template-columns: 1fr 3fr;
        column-gap: $mobileGutter;
      }
    }
  }
}
