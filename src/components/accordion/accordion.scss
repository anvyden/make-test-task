@import '~/scss/variables';

.accordion {
  position: relative;
  display: grid;
  grid-template-columns: repeat(calc(($desktopColumns / 4) * 3), 1fr);
  column-gap: $gutter;

  @media screen and (max-width: $tabletWidth) {
    grid-template-columns: repeat(calc(($tabletColumns / 4) * 3), 1fr);
  }

  @media screen and (max-width: $mobileWidth) {
    grid-template-columns: repeat(calc(($mobileColumns / 4) * 4), 1fr);
    column-gap: $mobileGutter;
  }

  &__border {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 1px;
    background-color: $inActiveColor;
    content: '';
  }

  &__header {
    position: relative;
    grid-column: 1 / calc((($desktopColumns / 4) * 3) + 1);
    width: 100%;
    padding-bottom: 15px;
    color: $secondaryColor;
    outline: none;
    cursor: pointer;

    &::after {
      position: absolute;
      top: 12px;
      right: 0;
      width: 9px;
      height: 6px;
      background: url('~/components/accordion/img/arrow.svg');
      transform: translateY(-50%);
      transition: transform 0.5s;
      content: '';
    }

    &--hovered {
      color: $primaryColor;

      ~ .accordion {
        &__border {
          background-color: $activeColor;
        }
      }
    }

    &:hover,
    &:focus-visible {
      color: $primaryColor;

      ~ .accordion {
        &__border {
          background-color: $activeColor;
        }
      }
    }

    @media screen and (max-width: $tabletWidth) {
      grid-column: 1 / calc((($tabletColumns / 4) * 3) + 1);
    }

    @media screen and (max-width: $mobileWidth) {
      grid-column: 1 / calc((($mobileColumns / 4) * 4) + 1);
    }
  }

  &--opened {
    .accordion {
      &__header {
        color: $activeColor;

        &::after {
          transform: rotate(180deg);
        }
      }

      &__body {
        padding: 9px 0 30px;
      }

      &__border {
        height: 2px;
        background-color: $activeColor;
      }
    }
  }

  &__body {
    grid-column: 1 / calc((($desktopColumns / 4) * 2) + 1);
    overflow: hidden;
    transition: max-height 0.5s, padding 0.5s, visibility 0.5s;

    @media screen and (max-width: $tabletWidth) {
      grid-column: 1 / calc(($tabletColumns / 4) * 3);
    }

    @media screen and (max-width: $mobileWidth) {
      grid-column: 1 / calc((($mobileColumns / 4) * 4) + 1);
    }
  }
}
